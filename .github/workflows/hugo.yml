# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: windows-latest
    env:
      HUGO_VERSION: 0.88.1
    steps:
      - name: Install Hugo CLI
 run: |
    $HUGO_VERSION = "0.88.1"
    $HUGO_URL = "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Windows-64bit.zip"
    Invoke-WebRequest -Uri $HUGO_URL -OutFile $Env:RUNNER_TEMP/hugo.zip
    Expand-Archive -Path $Env:RUNNER_TEMP/hugo.zip -DestinationPath $Env:RUNNER_TEMP/hugo
    Move-Item -Path $Env:RUNNER_TEMP/hugo/hugo.exe -Destination C:\tools\hugo\hugo.exe
  shell: pwsh  # Utilizza PowerShell invece di Bash
      - name: Install Dart Sass
        run: |
          choco install sass -y  # Installa Dart Sass con Chocolatey, se necessario
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: |
          if exist package-lock.json (
            npm ci
          ) else (
            npm install
          )
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: windows-latest  # Cambia questo a "windows-latest"
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
